pipeline {
    agent any
    
    environment {
        IMAGE_TAG = "${BUILD_NUMBER}"
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Clean workspace before checkout
                cleanWs()
                
                // Checkout your repository
                git branch: 'main',
                    url: 'https://github.com/vidhya101/Jenkins-Zero-To-Hero.git'
                
                // Verify workspace contents
                sh 'ls -la'
            }
        }

        stage('Prepare Environment') {
            steps {
                script {
                    // Create Dockerfile if it doesn't exist
                    writeFile file: 'Dockerfile', text: '''
FROM python:3.9-slim

ENV PYTHONDONTWRITEBYTECODE=1 \\
    PYTHONUNBUFFERED=1 \\
    PIP_DISABLE_PIP_VERSION_CHECK=on

WORKDIR /app

RUN apt-get update && \\
    apt-get install -y --no-install-recommends \\
    gcc \\
    python3-dev \\
    libpq-dev && \\
    rm -rf /var/lib/apt/lists/*

COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY . .

RUN python manage.py migrate && \\
    python manage.py collectstatic --noinput

EXPOSE 8000

CMD ["python", "manage.py", "runserver", "0.0.0.0:8000"]
'''
                    
                    // Create requirements.txt if it doesn't exist
                    writeFile file: 'requirements.txt', text: '''
Django==3.2.10
gunicorn==20.1.0
django-environ==0.8.1
psycopg2-binary==2.9.3
whitenoise==5.3.0
'''
                    
                    // Verify files were created
                    sh '''
                        echo "Workspace contents:"
                        ls -la
                        echo "\nDockerfile contents:"
                        cat Dockerfile
                        echo "\nrequirements.txt contents:"
                        cat requirements.txt
                    '''
                }
            }
        }

        stage('Build Docker') {
            steps {
                script {
                    sh """
                        echo 'Building Docker Image'
                        docker build -t abhishekf5/cicd-e2e:${IMAGE_TAG} .
                    """
                }
            }
        }
    }
    
    post {
        always {
            cleanWs()
        }
    }
}
